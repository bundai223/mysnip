snippet     if
abbr        if () {}
    if (${1:/* condition */})
    {
        ${0:/* code */}
    }

snippet else
    else
    {
        ${0}
    }

snippet elseif
    else if (${1:/* condition */})
    {
        ${0}
    }

snippet     ifelse
abbr        if () {} else {}
    if (${1:condition})
    {
        ${2}
    }
    else
    {
        ${3}
    }

snippet     for
abbr        for () {}
    for ( ${1:type} ${2:index name} = 0; $2 < ${3:loop num}; ++$2 )
    {
        ${0}
    }

snippet     while
abbr        while () {}
    while (${1:/* condition */})
    {
        ${0:/* code */}
    }

snippet     do_while
alias       do
    do
    {
        ${0:/* code */}
    } while (${1:/* condition */});

snippet     switch
abbr        switch () {}
    switch (${1:var})
    {
        case ${2:val}:
            {
                ${0}
            } break;
    }

snippet     function
alias       func
abbr        func(){}
    function ${1:name}(${2:arg})
    {
        ${0}
    }

snippet     class
abbr        class{}
    class ${1:name}
    {
    }

snippet privateheader
    //----------------------------------------------------------------------
    //! @brief  ${1:funcname}
    //! @param  ${2:paramname}[${3:inout}]  ${4:describe}
    //! @retval ${5:type}   ${6:describe}
    //----------------------------------------------------------------------
    ${0}

snippet protectedheader
    //======================================================================
    //! @brief  ${1:funcname}
    //! @param  ${2:paramname}[${3:inout}]  ${4:describe}
    //! @retval ${5:type}   ${6:describe}
    //======================================================================
    ${0}

snippet publicheader
    //**********************************************************************
    //! @brief  ${1:funcname}
    //! @param  ${2:paramname}[${3:inout}]  ${4:describe}
    //! @retval ${5:type}   ${6:describe}
    //**********************************************************************
    ${0}


