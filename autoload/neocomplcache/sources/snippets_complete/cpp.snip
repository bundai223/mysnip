include c.snip

snippet     template
abbr        template <T>
    template<typename ${1:T}> 

snippet     class
abbr        class {}
    class ${1:name}
    {
    public:
        $1( void );
        ~$1();
        
        ${2}
        
    private:
        void    _Init( void );
        void    _Term( void );
    };

snippet     try
abbr        try catch
    try {
        ${1}
    } catch (${2:exception}) {
        ${3}
    }

## range based for ( C++11 feature )
#snippet     for_CPP11
#abbr        for (:) {}
#    for (${1:var} : ${2:container}) {
#        ${0}
#    }
#
## lambda expression ( C++11 feature )
#snippet     lambda
#abbr        [](){}
#    [${1}](${2})${3}{ ${4} }
#
## scoped enumeration ( C++11 feature )
#snippet     enum_scoped
#abbr        enum struct {}
#    enum struct { ${1} }


snippet static_cast
    static_cast<${1}>( ${2} )${0}

snippet const_cast
    const_cast<${1}>( ${2} )${0}

snippet dynamic_cast
    dynamic_cast<${1}>( ${2} )${0}

snippet reinterpret_cast
    reinterpret_cast<${1}>( ${2} )${0}


snippet privateheader
    //--------------------------------------------------------------------------------
    //! @brief	${1:funcname}
    //! @param	${2:paramname}[${3:inout}]	${4:describe}
    //! @retval	${5:type}	${6:describe}
    //--------------------------------------------------------------------------------
    ${0}

snippet protectedheader
    //================================================================================
    //! @brief	${1:funcname}
    //! @param	${2:paramname}[${3:inout}]	${4:describe}
    //! @retval	${5:type}	${6:describe}
    //================================================================================
    ${0}

snippet publicheader
    //********************************************************************************
    //! @brief	${1:funcname}
    //! @param	${2:paramname}[${3:inout}]	${4:describe}
    //! @retval	${5:type}	${6:describe}
    //********************************************************************************
    ${0}

snippet todo
    // TODO: ${1}
    ${0}

snippet namespace
    namespace ${1:name} {
    ${0}
    } // namespace ${1}

